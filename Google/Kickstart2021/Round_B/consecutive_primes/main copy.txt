from sys import stdin, stdout, maxsize
from copy import deepcopy
from collections import defaultdict
import os
import time
import math
start_time = time.time()

def is_prime(n):
    if n == 1 or n == 2:
        return True
    if n % 2 == 0:
        return False
    i = 3
    N = n//2
    while i < N:
        if n % i == 0:
            return False
        N = n / i
        i+=2
    return True
def consecutive_number(N):
    ans = 0
    prime1 = 2
    prime2 = 3
    prev = current = 2 * 3
    for i in range(5, N - 1, 2):
        if is_prime(i):
            prime1 = prime2
            prime2 = i
            current = prime1 * prime2
            if current > N:
                return prev
            prev = current
    return current

def consecutive_number_2(N):
    ans = 0
    root = int(math.ceil(math.sqrt(N)))
    primesTop = 0
    primesBottom = []
    top = root + 1
    bottom = root
    top_f = False
    while bottom > 0:
        if not top_f and is_prime(top):
            top_f = True
            primesTop = top
        if is_prime(bottom):
            if len(primesBottom) == 2:
                curr = primesBottom[0] * primesBottom[1]
                if curr <= N:
                    return curr
            else:
                primesBottom.append(bottom)
                if len(primesBottom) == 2:
                    curr = primesBottom[0] * primesBottom[1]
                    if curr <= N:
                        return curr
                elif len(primesBottom) == 1 and primesTop != 0:
                    curr = primesBottom[0] * primesTop
                    if curr <= N:
                        return curr
        top+=1
        bottom-=1

    return ans

dir = os.path.dirname(__file__)


stdin = open(os.path.join(dir,  'test_data/test_set_2/ts2_input.txt'),'r')
stdout = open(os.path.join(dir, 'test_data/test_set_2/ts2_output.txt'),'r')
#stdin = open(os.path.join(dir, 'test_data/sample_test_set_1/sample_ts1_input.txt'),'r')
#stdout = open(os.path.join(dir, 'test_data/sample_test_set_1/sample_ts1_output.txt'),'r')

t = int(stdin.readline())

for case in range(t):
    N = int(stdin.readline())
    result = stdout.readline()[:-1]
    tmpAns = consecutive_number_2(N)
    ans = ('Case #%d: %s') % (case+1, (tmpAns))
    if ans != result:
        print('%s, Incorrect: %d' % (result, (tmpAns)))
        tmpAns = (consecutive_number_2( N))
    else:
        print(ans)
print("--- %s seconds ---" % (time.time() - start_time))